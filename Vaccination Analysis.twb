<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20193.19.0821.2225                               -->
<workbook original-version='18.1' source-build='2019.3.0 (20193.19.0821.2225)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='us vaccinations (us vaccinations)' inline='true' name='federated.1ipbdtv15k0lx91cx1jgo15xvotj' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='us vaccinations' name='excel-direct.1a068j70e9ylnv1gejsi711kh64y'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Harika/Documents/Masters/HI &amp; ES/us vaccinations.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='inner' type='join'>
          <clause type='join'>
            <expression op='AND'>
              <expression op='='>
                <expression op='[us vaccinations].[date]' />
                <expression op='[cases &amp; deaths].[date]' />
              </expression>
              <expression op='='>
                <expression op='[us vaccinations].[location]' />
                <expression op='[cases &amp; deaths].[state]' />
              </expression>
            </expression>
          </clause>
          <relation connection='excel-direct.1a068j70e9ylnv1gejsi711kh64y' name='us vaccinations' table='[&apos;us vaccinations$&apos;]' type='table'>
            <columns gridOrigin='A1:Q10001:no:A1:Q10001:0' header='yes' outcome='6'>
              <column datatype='string' name='location' ordinal='0' />
              <column datatype='date' name='date' ordinal='1' />
              <column datatype='integer' name='total_vaccinations' ordinal='2' />
              <column datatype='integer' name='total_distributed' ordinal='3' />
              <column datatype='integer' name='people_vaccinated' ordinal='4' />
              <column datatype='real' name='people_fully_vaccinated_per_hundred' ordinal='5' />
              <column datatype='real' name='total_vaccinations_per_hundred' ordinal='6' />
              <column datatype='integer' name='people_fully_vaccinated' ordinal='7' />
              <column datatype='real' name='people_vaccinated_per_hundred' ordinal='8' />
              <column datatype='real' name='distributed_per_hundred' ordinal='9' />
              <column datatype='integer' name='daily_vaccinations_raw' ordinal='10' />
              <column datatype='integer' name='daily_vaccinations' ordinal='11' />
              <column datatype='integer' name='daily_vaccinations_per_million' ordinal='12' />
              <column datatype='real' name='share_doses_used' ordinal='13' />
              <column datatype='integer' name='total_boosters' ordinal='14' />
              <column datatype='real' name='total_boosters_per_hundred' ordinal='15' />
              <column datatype='integer' name='Population' ordinal='16' />
            </columns>
          </relation>
          <relation connection='excel-direct.1a068j70e9ylnv1gejsi711kh64y' name='cases &amp; deaths' table='[&apos;cases &amp; deaths$&apos;]' type='table'>
            <columns gridOrigin='A1:F10001:no:A1:F10001:0' header='yes' outcome='6'>
              <column datatype='string' name='state' ordinal='0' />
              <column datatype='date' name='date' ordinal='1' />
              <column datatype='integer' name='positive cases' ordinal='2' />
              <column datatype='integer' name='new cases' ordinal='3' />
              <column datatype='integer' name='deaths' ordinal='4' />
              <column datatype='integer' name='new deaths' ordinal='5' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Population]' value='[us vaccinations].[Population]' />
          <map key='[daily_vaccinations]' value='[us vaccinations].[daily_vaccinations]' />
          <map key='[daily_vaccinations_per_million]' value='[us vaccinations].[daily_vaccinations_per_million]' />
          <map key='[daily_vaccinations_raw]' value='[us vaccinations].[daily_vaccinations_raw]' />
          <map key='[date (cases &amp; deaths)]' value='[cases &amp; deaths].[date]' />
          <map key='[date]' value='[us vaccinations].[date]' />
          <map key='[deaths]' value='[cases &amp; deaths].[deaths]' />
          <map key='[distributed_per_hundred]' value='[us vaccinations].[distributed_per_hundred]' />
          <map key='[location]' value='[us vaccinations].[location]' />
          <map key='[new cases]' value='[cases &amp; deaths].[new cases]' />
          <map key='[new deaths]' value='[cases &amp; deaths].[new deaths]' />
          <map key='[people_fully_vaccinated]' value='[us vaccinations].[people_fully_vaccinated]' />
          <map key='[people_fully_vaccinated_per_hundred]' value='[us vaccinations].[people_fully_vaccinated_per_hundred]' />
          <map key='[people_vaccinated]' value='[us vaccinations].[people_vaccinated]' />
          <map key='[people_vaccinated_per_hundred]' value='[us vaccinations].[people_vaccinated_per_hundred]' />
          <map key='[positive cases]' value='[cases &amp; deaths].[positive cases]' />
          <map key='[share_doses_used]' value='[us vaccinations].[share_doses_used]' />
          <map key='[state]' value='[cases &amp; deaths].[state]' />
          <map key='[total_boosters]' value='[us vaccinations].[total_boosters]' />
          <map key='[total_boosters_per_hundred]' value='[us vaccinations].[total_boosters_per_hundred]' />
          <map key='[total_distributed]' value='[us vaccinations].[total_distributed]' />
          <map key='[total_vaccinations]' value='[us vaccinations].[total_vaccinations]' />
          <map key='[total_vaccinations_per_hundred]' value='[us vaccinations].[total_vaccinations_per_hundred]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[us vaccinations]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[us vaccinations]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_vaccinations]</local-name>
            <parent-name>[us vaccinations]</parent-name>
            <remote-alias>total_vaccinations</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_distributed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_distributed]</local-name>
            <parent-name>[us vaccinations]</parent-name>
            <remote-alias>total_distributed</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated</remote-name>
            <remote-type>20</remote-type>
            <local-name>[people_vaccinated]</local-name>
            <parent-name>[us vaccinations]</parent-name>
            <remote-alias>people_vaccinated</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_fully_vaccinated_per_hundred]</local-name>
            <parent-name>[us vaccinations]</parent-name>
            <remote-alias>people_fully_vaccinated_per_hundred</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_vaccinations_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_vaccinations_per_hundred]</local-name>
            <parent-name>[us vaccinations]</parent-name>
            <remote-alias>total_vaccinations_per_hundred</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated</remote-name>
            <remote-type>20</remote-type>
            <local-name>[people_fully_vaccinated]</local-name>
            <parent-name>[us vaccinations]</parent-name>
            <remote-alias>people_fully_vaccinated</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_vaccinated_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[people_vaccinated_per_hundred]</local-name>
            <parent-name>[us vaccinations]</parent-name>
            <remote-alias>people_vaccinated_per_hundred</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>distributed_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[distributed_per_hundred]</local-name>
            <parent-name>[us vaccinations]</parent-name>
            <remote-alias>distributed_per_hundred</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>daily_vaccinations_raw</remote-name>
            <remote-type>20</remote-type>
            <local-name>[daily_vaccinations_raw]</local-name>
            <parent-name>[us vaccinations]</parent-name>
            <remote-alias>daily_vaccinations_raw</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>daily_vaccinations</remote-name>
            <remote-type>20</remote-type>
            <local-name>[daily_vaccinations]</local-name>
            <parent-name>[us vaccinations]</parent-name>
            <remote-alias>daily_vaccinations</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>daily_vaccinations_per_million</remote-name>
            <remote-type>20</remote-type>
            <local-name>[daily_vaccinations_per_million]</local-name>
            <parent-name>[us vaccinations]</parent-name>
            <remote-alias>daily_vaccinations_per_million</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>share_doses_used</remote-name>
            <remote-type>5</remote-type>
            <local-name>[share_doses_used]</local-name>
            <parent-name>[us vaccinations]</parent-name>
            <remote-alias>share_doses_used</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_boosters</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_boosters]</local-name>
            <parent-name>[us vaccinations]</parent-name>
            <remote-alias>total_boosters</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_boosters_per_hundred</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_boosters_per_hundred]</local-name>
            <parent-name>[us vaccinations]</parent-name>
            <remote-alias>total_boosters_per_hundred</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Population</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Population]</local-name>
            <parent-name>[us vaccinations]</parent-name>
            <remote-alias>Population</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[us vaccinations]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:Q10001:no:A1:Q10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state</remote-name>
            <remote-type>130</remote-type>
            <local-name>[state]</local-name>
            <parent-name>[cases &amp; deaths]</parent-name>
            <remote-alias>state</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date (cases &amp; deaths)]</local-name>
            <parent-name>[cases &amp; deaths]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>18</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>positive cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[positive cases]</local-name>
            <parent-name>[cases &amp; deaths]</parent-name>
            <remote-alias>positive cases</remote-alias>
            <ordinal>19</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new cases]</local-name>
            <parent-name>[cases &amp; deaths]</parent-name>
            <remote-alias>new cases</remote-alias>
            <ordinal>20</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[deaths]</local-name>
            <parent-name>[cases &amp; deaths]</parent-name>
            <remote-alias>deaths</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new deaths</remote-name>
            <remote-type>20</remote-type>
            <local-name>[new deaths]</local-name>
            <parent-name>[cases &amp; deaths]</parent-name>
            <remote-alias>new deaths</remote-alias>
            <ordinal>22</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[cases &amp; deaths]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:F10001:no:A1:F10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='cases percent' datatype='real' name='[Calculation_1596526072584093696]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE : SUM( [new cases] ) } / { EXCLUDE [Population] : SUM( [Population] ) } * 100' />
      </column>
      <column caption='boosters percent' datatype='real' name='[Calculation_1596526072587100162]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE : SUM( [total_boosters] ) } / { EXCLUDE [Population] : SUM( [Population] ) } * 100' />
      </column>
      <column caption='percent distributed' datatype='real' name='[Calculation_1596526072590024707]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE : SUM( [total_distributed] ) } / { EXCLUDE [Population] : SUM( [Population] ) } * 100' />
      </column>
      <column caption='death percent' datatype='real' name='[Calculation_1596526072592744452]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE : SUM( [new deaths] ) } / { EXCLUDE [Population] : SUM( [Population] ) } * 100' />
      </column>
      <column caption='full vaccinated percent' datatype='real' name='[Calculation_1780892182312706048]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE : SUM( [people_fully_vaccinated] ) } / { EXCLUDE [Population] : SUM( [Population] ) } * 100' />
      </column>
      <column caption='daily vaccination percent' datatype='real' name='[Calculation_1780892182314377218]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ INCLUDE : SUM( [daily_vaccinations] ) } / { EXCLUDE [Population] : SUM( [Population] ) } * 100' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='string' name='[location]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_1596526072584093696]' derivation='Sum' name='[sum:Calculation_1596526072584093696:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1596526072587100162]' derivation='Sum' name='[sum:Calculation_1596526072587100162:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1596526072590024707]' derivation='Sum' name='[sum:Calculation_1596526072590024707:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1596526072592744452]' derivation='Sum' name='[sum:Calculation_1596526072592744452:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1780892182312706048]' derivation='Sum' name='[sum:Calculation_1780892182312706048:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1780892182314377218]' derivation='Sum' name='[sum:Calculation_1780892182314377218:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.410714' measure-ordering='alphabetic' measure-percentage='0.589286' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;New York State&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Long Term Care&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Federated States of Micronesia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Republic of Palau&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bureau of Prisons&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Veterans Health&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alaska&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Indian Health Svc&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Virgin Islands&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dept of Defense&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Marshall Islands&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;American Samoa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Guam&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Northern Mariana Islands&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[sum:Calculation_1596526072587100162:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[sum:Calculation_1780892182314377218:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.1ipbdtv15k0lx91cx1jgo15xvotj]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[sum:Calculation_1596526072592744452:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[sum:Calculation_1596526072584093696:qk]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[sum:Calculation_1596526072590024707:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[sum:Calculation_1780892182312706048:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
        <semantic-value key='[State].[Name]' value='%null%' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='daily cases vs daily vaccinations' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Measure Names' />
        <param name='target' value='daily cases vs daily vaccinations' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Daily vaccinations by state'>
      <table>
        <view>
          <datasources>
            <datasource caption='us vaccinations (us vaccinations)' name='federated.1ipbdtv15k0lx91cx1jgo15xvotj' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1ipbdtv15k0lx91cx1jgo15xvotj'>
            <column caption='daily vaccination percent' datatype='real' name='[Calculation_1780892182314377218]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE : SUM( [daily_vaccinations] ) } / { EXCLUDE [Population] : SUM( [Population] ) } * 100' />
            </column>
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='integer' name='[daily_vaccinations]' role='measure' type='quantitative' />
            <column datatype='string' name='[location]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_1780892182314377218]' derivation='Sum' name='[sum:Calculation_1780892182314377218:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[sum:Calculation_1780892182314377218:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[sum:Calculation_1780892182314377218:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[Longitude (generated)]' field-type='quantitative' max='33774534.261247709' min='20236879.903654352' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[Latitude (generated)]' field-type='quantitative' max='10022164.707721088' min='2104121.908041019' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[sum:Calculation_1780892182314377218:qk]' num-steps='10' palette='red_green_gold_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[none:state:nk]' />
              <lod column='[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[none:location:nk]' />
              <color column='[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[sum:Calculation_1780892182314377218:qk]' />
              <geometry column='[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[Latitude (generated)]</rows>
        <cols>[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{242195F3-45F9-4614-96C0-9D4DFEF054E7}' />
    </worksheet>
    <worksheet name='Daily vaccinations by state (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='us vaccinations (us vaccinations)' name='federated.1ipbdtv15k0lx91cx1jgo15xvotj' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1ipbdtv15k0lx91cx1jgo15xvotj'>
            <column caption='daily vaccination percent' datatype='real' name='[Calculation_1780892182314377218]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE : SUM( [daily_vaccinations] ) } / { EXCLUDE [Population] : SUM( [Population] ) } * 100' />
            </column>
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='integer' name='[daily_vaccinations]' role='measure' type='quantitative' />
            <column datatype='string' name='[location]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_1780892182314377218]' derivation='Sum' name='[sum:Calculation_1780892182314377218:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[sum:Calculation_1780892182314377218:qk]' included-values='non-null' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[none:location:nk]' direction='DESC' measure-to-sort-by='[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[sum:Calculation_1780892182314377218:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[sum:Calculation_1780892182314377218:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[sum:Calculation_1780892182314377218:qk]' num-steps='10' palette='red_green_gold_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1ipbdtv15k0lx91cx1jgo15xvotj].[none:location:nk] / [federated.1ipbdtv15k0lx91cx1jgo15xvotj].[none:state:nk])</rows>
        <cols>[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[sum:Calculation_1780892182314377218:qk]</cols>
      </table>
      <simple-id uuid='{F69A9DFC-2D0B-4E48-BD0C-08D2E383394F}' />
    </worksheet>
    <worksheet name='Fully Vaccinated'>
      <table>
        <view>
          <datasources>
            <datasource caption='us vaccinations (us vaccinations)' name='federated.1ipbdtv15k0lx91cx1jgo15xvotj' />
          </datasources>
          <datasource-dependencies datasource='federated.1ipbdtv15k0lx91cx1jgo15xvotj'>
            <column caption='full vaccinated percent' datatype='real' name='[Calculation_1780892182312706048]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE : SUM( [people_fully_vaccinated] ) } / { EXCLUDE [Population] : SUM( [Population] ) } * 100' />
            </column>
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[location]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column datatype='integer' name='[people_fully_vaccinated]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1780892182312706048]' derivation='Sum' name='[sum:Calculation_1780892182312706048:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[none:location:nk]'>
            <groupfilter function='level-members' level='[none:location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[sum:Calculation_1780892182312706048:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[none:location:nk]</column>
            <column>[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[sum:Calculation_1780892182312706048:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[none:location:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[sum:Calculation_1780892182312706048:qk]</rows>
        <cols>[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[tmn:date:qk]</cols>
      </table>
      <simple-id uuid='{A78A1931-BA4D-47DB-ADDD-A9945309D13A}' />
    </worksheet>
    <worksheet name='Total distribution'>
      <table>
        <view>
          <datasources>
            <datasource caption='us vaccinations (us vaccinations)' name='federated.1ipbdtv15k0lx91cx1jgo15xvotj' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1ipbdtv15k0lx91cx1jgo15xvotj'>
            <column caption='percent distributed' datatype='real' name='[Calculation_1596526072590024707]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE : SUM( [total_distributed] ) } / { EXCLUDE [Population] : SUM( [Population] ) } * 100' />
            </column>
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='string' name='[location]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1596526072590024707]' derivation='Sum' name='[sum:Calculation_1596526072590024707:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[total_distributed]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[sum:Calculation_1596526072590024707:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[sum:Calculation_1596526072590024707:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[Longitude (generated)]' field-type='quantitative' max='33149867.153413162' min='24224002.086640578' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[Latitude (generated)]' field-type='quantitative' max='6891769.5156028252' min='1671117.5654197289' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[sum:Calculation_1596526072590024707:qk]' num-steps='10' palette='red_green_gold_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[none:location:nk]' />
              <lod column='[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[none:location:nk]' />
              <color column='[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[sum:Calculation_1596526072590024707:qk]' />
              <geometry column='[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[Latitude (generated)]</rows>
        <cols>[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{A57CC3B8-E644-4CE7-A33B-8B1198A87E03}' />
    </worksheet>
    <worksheet name='Total distribution (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='us vaccinations (us vaccinations)' name='federated.1ipbdtv15k0lx91cx1jgo15xvotj' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1ipbdtv15k0lx91cx1jgo15xvotj'>
            <column caption='percent distributed' datatype='real' name='[Calculation_1596526072590024707]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE : SUM( [total_distributed] ) } / { EXCLUDE [Population] : SUM( [Population] ) } * 100' />
            </column>
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='string' name='[location]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_1596526072590024707]' derivation='Sum' name='[sum:Calculation_1596526072590024707:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[total_distributed]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[sum:Calculation_1596526072590024707:qk]' included-values='non-null' />
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[none:location:nk]' direction='DESC' measure-to-sort-by='[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[sum:Calculation_1596526072590024707:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[sum:Calculation_1596526072590024707:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[sum:Calculation_1596526072590024707:qk]' num-steps='10' palette='red_green_gold_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1ipbdtv15k0lx91cx1jgo15xvotj].[none:location:nk] / [federated.1ipbdtv15k0lx91cx1jgo15xvotj].[none:state:nk])</rows>
        <cols>[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[sum:Calculation_1596526072590024707:qk]</cols>
      </table>
      <simple-id uuid='{5588D7D8-113C-41DA-919A-F9364206EA29}' />
    </worksheet>
    <worksheet name='booster over months'>
      <table>
        <view>
          <datasources>
            <datasource caption='us vaccinations (us vaccinations)' name='federated.1ipbdtv15k0lx91cx1jgo15xvotj' />
          </datasources>
          <datasource-dependencies datasource='federated.1ipbdtv15k0lx91cx1jgo15xvotj'>
            <column caption='boosters percent' datatype='real' name='[Calculation_1596526072587100162]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE : SUM( [total_boosters] ) } / { EXCLUDE [Population] : SUM( [Population] ) } * 100' />
            </column>
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[location]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1596526072587100162]' derivation='Sum' name='[sum:Calculation_1596526072587100162:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[total_boosters]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[none:location:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:location:nk]' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[sum:Calculation_1596526072587100162:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[none:location:nk]</column>
            <column>[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[sum:Calculation_1596526072587100162:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[none:location:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[sum:Calculation_1596526072587100162:qk]</rows>
        <cols>[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[tmn:date:qk]</cols>
      </table>
      <simple-id uuid='{74E179D2-57B4-40C2-86B5-AD7A5929DC5D}' />
    </worksheet>
    <worksheet name='cases vs boosters'>
      <table>
        <view>
          <datasources>
            <datasource caption='us vaccinations (us vaccinations)' name='federated.1ipbdtv15k0lx91cx1jgo15xvotj' />
          </datasources>
          <datasource-dependencies datasource='federated.1ipbdtv15k0lx91cx1jgo15xvotj'>
            <column caption='cases percent' datatype='real' name='[Calculation_1596526072584093696]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE : SUM( [new cases] ) } / { EXCLUDE [Population] : SUM( [Population] ) } * 100' />
            </column>
            <column caption='boosters percent' datatype='real' name='[Calculation_1596526072587100162]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE : SUM( [total_boosters] ) } / { EXCLUDE [Population] : SUM( [Population] ) } * 100' />
            </column>
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[new cases]' role='measure' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_1596526072584093696]' derivation='Sum' name='[sum:Calculation_1596526072584093696:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1596526072587100162]' derivation='Sum' name='[sum:Calculation_1596526072587100162:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[total_boosters]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[none:state:nk]'>
            <groupfilter function='member' level='[none:state:nk]' member='&quot;Nevada&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[sum:Calculation_1596526072587100162:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[none:state:nk]</column>
            <column>[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[sum:Calculation_1596526072587100162:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[sum:Calculation_1596526072587100162:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[sum:Calculation_1596526072584093696:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[sum:Calculation_1596526072587100162:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1ipbdtv15k0lx91cx1jgo15xvotj].[sum:Calculation_1596526072584093696:qk] + [federated.1ipbdtv15k0lx91cx1jgo15xvotj].[sum:Calculation_1596526072587100162:qk])</rows>
        <cols>[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[tmn:date:qk]</cols>
      </table>
      <simple-id uuid='{D683E1CB-E3A6-4B4D-B778-A1F28985B497}' />
    </worksheet>
    <worksheet name='daily cases vs daily vaccinations'>
      <table>
        <view>
          <datasources>
            <datasource caption='us vaccinations (us vaccinations)' name='federated.1ipbdtv15k0lx91cx1jgo15xvotj' />
          </datasources>
          <datasource-dependencies datasource='federated.1ipbdtv15k0lx91cx1jgo15xvotj'>
            <column caption='cases percent' datatype='real' name='[Calculation_1596526072584093696]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE : SUM( [new cases] ) } / { EXCLUDE [Population] : SUM( [Population] ) } * 100' />
            </column>
            <column caption='daily vaccination percent' datatype='real' name='[Calculation_1780892182314377218]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE : SUM( [daily_vaccinations] ) } / { EXCLUDE [Population] : SUM( [Population] ) } * 100' />
            </column>
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='integer' name='[daily_vaccinations]' role='measure' type='quantitative' />
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[new cases]' role='measure' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_1596526072584093696]' derivation='Sum' name='[sum:Calculation_1596526072584093696:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1780892182314377218]' derivation='Sum' name='[sum:Calculation_1780892182314377218:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[none:state:nk]'>
            <groupfilter function='member' level='[none:state:nk]' member='&quot;California&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[sum:Calculation_1780892182314377218:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[sum:Calculation_1596526072584093696:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[sum:Calculation_1780892182314377218:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1ipbdtv15k0lx91cx1jgo15xvotj].[sum:Calculation_1596526072584093696:qk] + [federated.1ipbdtv15k0lx91cx1jgo15xvotj].[sum:Calculation_1780892182314377218:qk])</rows>
        <cols>[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[tmn:date:qk]</cols>
      </table>
      <simple-id uuid='{D79B5B0C-012F-488F-9957-88548BB03F68}' />
    </worksheet>
    <worksheet name='daily vaccinations over months'>
      <table>
        <view>
          <datasources>
            <datasource caption='us vaccinations (us vaccinations)' name='federated.1ipbdtv15k0lx91cx1jgo15xvotj' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1ipbdtv15k0lx91cx1jgo15xvotj'>
            <column caption='daily vaccination percent' datatype='real' name='[Calculation_1780892182314377218]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE : SUM( [daily_vaccinations] ) } / { EXCLUDE [Population] : SUM( [Population] ) } * 100' />
            </column>
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='integer' name='[daily_vaccinations]' role='measure' type='quantitative' />
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[location]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1780892182314377218]' derivation='Sum' name='[sum:Calculation_1780892182314377218:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[none:location:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:location:nk]' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[sum:Calculation_1780892182314377218:qk]' included-values='non-null' />
          <slices>
            <column>[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[none:location:nk]</column>
            <column>[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[sum:Calculation_1780892182314377218:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[none:location:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[sum:Calculation_1780892182314377218:qk]</rows>
        <cols>[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[tmn:date:qk]</cols>
      </table>
      <simple-id uuid='{F9AE8C1C-DD26-493C-BBC2-D1FA500E039A}' />
    </worksheet>
    <worksheet name='deaths vs vaccinations'>
      <table>
        <view>
          <datasources>
            <datasource caption='us vaccinations (us vaccinations)' name='federated.1ipbdtv15k0lx91cx1jgo15xvotj' />
          </datasources>
          <datasource-dependencies datasource='federated.1ipbdtv15k0lx91cx1jgo15xvotj'>
            <column caption='death percent' datatype='real' name='[Calculation_1596526072592744452]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE : SUM( [new deaths] ) } / { EXCLUDE [Population] : SUM( [Population] ) } * 100' />
            </column>
            <column caption='daily vaccination percent' datatype='real' name='[Calculation_1780892182314377218]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ INCLUDE : SUM( [daily_vaccinations] ) } / { EXCLUDE [Population] : SUM( [Population] ) } * 100' />
            </column>
            <column datatype='integer' name='[Population]' role='measure' type='quantitative' />
            <column datatype='integer' name='[daily_vaccinations]' role='measure' type='quantitative' />
            <column datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[new deaths]' role='measure' type='quantitative' />
            <column-instance column='[state]' derivation='None' name='[none:state:nk]' pivot='key' type='nominal' />
            <column datatype='string' name='[state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_1596526072592744452]' derivation='Sum' name='[sum:Calculation_1596526072592744452:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_1780892182314377218]' derivation='Sum' name='[sum:Calculation_1780892182314377218:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[none:state:nk]'>
            <groupfilter function='member' level='[none:state:nk]' member='&quot;Nevada&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[none:state:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[sum:Calculation_1780892182314377218:qk]' field-type='quantitative' fold='true' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[sum:Calculation_1596526072592744452:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[sum:Calculation_1780892182314377218:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.1ipbdtv15k0lx91cx1jgo15xvotj].[sum:Calculation_1596526072592744452:qk] + [federated.1ipbdtv15k0lx91cx1jgo15xvotj].[sum:Calculation_1780892182314377218:qk])</rows>
        <cols>[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[tmn:date:qk]</cols>
      </table>
      <simple-id uuid='{1F8AA3E7-BD27-4DF1-8D64-E61EA2C32C22}' />
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' maximized='true' name='Daily vaccinations by state'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[sum:Calculation_1780892182314377218:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[none:location:nk]</field>
            <field>[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{075701BC-3322-446C-9AFE-5B30EC7F8705}' />
    </window>
    <window class='worksheet' name='Daily vaccinations by state (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[none:location:nk]</field>
            <field>[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[none:state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{755E6B36-055C-4E47-975D-B3CEEE28E07F}' />
    </window>
    <window class='worksheet' name='Total distribution'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[sum:Calculation_1596526072590024707:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[:Measure Names]</field>
            <field>[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[none:location:nk]</field>
            <field>[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{3B3EFB33-6891-41FB-B94A-80C2C403B7B1}' />
    </window>
    <window class='worksheet' name='Total distribution (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[:Measure Names]</field>
            <field>[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[none:location:nk]</field>
            <field>[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[none:state:nk]</field>
            <field>[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{9D495BF4-B8CC-402D-B415-CE153F2592B9}' />
    </window>
    <window class='worksheet' name='daily vaccinations over months'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[none:location:nk]</field>
            <field>[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{6EBD455C-CA13-446D-ABE7-37B3C1F20808}' />
    </window>
    <window class='worksheet' name='Fully Vaccinated'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[none:location:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[none:location:nk]</field>
            <field>[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{2FAB606A-041B-419D-AA78-0900C6A2541A}' />
    </window>
    <window class='worksheet' name='booster over months'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='2' param='[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[none:location:nk]</field>
            <field>[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{FBA11EB1-7BFD-415C-9C7E-43D8F1FB198D}' />
    </window>
    <window class='worksheet' name='daily cases vs daily vaccinations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[none:state:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[:Measure Names]</field>
            <field>[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{567AFFD8-1753-49DB-B872-21288663B0F2}' />
    </window>
    <window class='worksheet' name='deaths vs vaccinations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[none:state:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[:Measure Names]</field>
            <field>[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[none:state:nk]</field>
            <field>[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{ABB55C9A-8AE2-4D4F-AA6A-BF9E156F3A53}' />
    </window>
    <window class='worksheet' name='cases vs boosters'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[none:state:nk]' type='filter' />
            <card pane-specification-id='1' param='[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[:Measure Names]</field>
            <field>[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[none:state:nk]</field>
            <field>[federated.1ipbdtv15k0lx91cx1jgo15xvotj].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5BFF4C9F-3153-4907-BBE4-7E85D43550CE}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Daily vaccinations by state' width='192'>
      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
      /x8zc6XQ+FE2owAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Daily vaccinations by state (2)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Fully Vaccinated' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Total distribution' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Total distribution (2)' width='192'>
      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
      YII=
    </thumbnail>
    <thumbnail height='192' name='booster over months' width='192'>
      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
      y43/D7l165Lh3n4CAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='cases vs boosters' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='daily cases vs daily vaccinations' width='192'>
      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
      AAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='daily vaccinations over months' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='deaths vs vaccinations' width='192'>
      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
      rkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
